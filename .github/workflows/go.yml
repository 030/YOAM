---
name: Go
'on': push
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Unit tests
        timeout-minutes: 20
        run: |
          go test -timeout=20m -short -cover -v -coverprofile=coverage.txt \
          -covermode=atomic ./...
      - uses: codecov/codecov-action@v3
        with:
          files: ./coverage.txt
          flags: unittests
          verbose: true
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=030-github
            -Dsonar.projectKey=030_yaam
            -Dsonar.exclusions=test/testdata/**
            -Dsonar.sources=.
            -Dsonar.coverage.exclusions=**/*_test.go,test/testdata/**
            -Dsonar.verbose=true
            -Dsonar.go.coverage.reportPaths="coverage.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Set YAAM deliverable environment variable
        run: echo "yaam-deliverable=yaam-ubuntu-20.04" >> $GITHUB_ENV
      - name: Use the value
        run: |
          echo "${{ env.yaam-deliverable }}"
      - name: Build
        run: ./scripts/build.sh
        env:
          YAAM_DELIVERABLE: ${{ env.yaam-deliverable }}
          SHA512_CMD: sha512sum
      - name: Quality
        run: |
          docker run --rm -v ${PWD}:/data markdownlint/markdownlint:0.11.0 \
            README.md -s /data/configs/.markdownlint.rb
          docker run --rm -v $(pwd):/app -w /app -e GOFLAGS=-buildvcs=false \
            golangci/golangci-lint:v1.50.1-alpine golangci-lint run -v \
            --timeout 2m30s --config configs/.golangci.yml
