---
name: DIP
'on':
  schedule:
    - cron: '33 10 * * 5'
jobs:
  dive:
    runs-on: ubuntu-latest
    name: Check whether images are up-to-date
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # yamllint disable rule:line-length
      - name: Download DIP
        run: curl -L https://github.com/030/dip/releases/download/4.1.0/dip-ubuntu-20.04 -o dip && chmod +x dip
      - name: Check Alpine
        run: ./dip image --name=alpine --regex=^3\.[0-9]+\.[0-9]+$ --updateDockerfile
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.0
      - name: Check Golang
        run: |
          ./dip image --name=golang --regex=^1\.[0-9]+\.[0-9]+-alpine3\.[0-9]+$ --updateDockerfile
          echo "Updating golang dependencies..."
          go get -u ./...
          go mod tidy
      - name: Check golangci-lint
        run: |
          GOLANGCI_LINT_VERSION=$(./dip image --name=golangci/golangci-lint --regex=^v1\.[0-9]+\.[0-9]+-alpine$)
          echo "Check whether the latest GolangCI version: '${GOLANGCI_LINT_VERSION}' is used..."
          sed -i "s|\(golangci-lint:\)v1\.[0-9]\+\.[0-9]\+\-alpine|\1${GOLANGCI_LINT_VERSION}|" ./.github/workflows/go.yml
      - name: Check Yamllint
        run: |
          YAMLLINT_VERSION=$(./dip image --name=pipelinecomponents/yamllint --regex=0\..*)
          echo "Check whether the latest yamllint version: '${YAMLLINT_VERSION}' is used..."
          sed -i "s|\(pipelinecomponents/yamllint:\).*|\1${YAMLLINT_VERSION}|" ./.github/workflows/yamllint.yml
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          assignees: '030'
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          base: main
          commit-message: 'build(deps): Update versions.'
          delete-branch: true
          title: 'Update dependencies.'
          token: ${{ secrets.PAT }}
